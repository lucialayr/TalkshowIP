scale_size_continuous(limits = c(1, max(df_date$n)), range = c(1, max(df_date$n)*2)) +
scico::scale_fill_scico_d(palette = colorscheme, direction = 1, name = variable, end = .85, begin = .3)  +
theme(axis.text.x = element_text(size = 15, angle = 90),
axis.text.y = element_text(size = 15),
axis.title.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major.y = element_line(color = "grey80")
)
colorscheme = "lapaz"
ggplot() + theme_void() +
geom_area(data = all_comb, aes(x = Sunday + 1, y = share, fill = indicator), color = "black", alpha = 1) +
geom_line(data = df_date, aes(x = Sunday + 1, y = n)) +
#geom_point(data = df_date, fill = "grey50", color = "black", shape = 21, position = "identity",
#           aes(x = Sunday + 1, y = n, size = n)) +
add_plot_layout(fontsize = 15) +
scale_x_date(name = "Wochenbeginn (Sonntag)") +
scale_y_continuous(limits = c(0, max(df_date$n)), expand = c(0,.5)) +
scale_size_continuous(limits = c(1, max(df_date$n)), range = c(1, max(df_date$n)*2)) +
scico::scale_fill_scico_d(palette = colorscheme, direction = 1, name = variable, end = .85, begin = .3)  +
theme(axis.text.x = element_text(size = 15, angle = 90),
axis.text.y = element_text(size = 15),
axis.title.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major.y = element_line(color = "grey80")
)
unique(df$Geschlecht)
unique(all_comb$Geschlecht)
unique(all_comb$indicator)
names(df)
if (variable %in% c("Nationalität", "Perspektive_Identität")) thresh = thresh
else thresh = 0
if (variable %in% c("Nationalität", "Perspektive_Identität")) thresh = thresh else thresh = 0
df_date = df %>%
mutate(Datum = as.Date(Datum, format = "%d.%m.%y")) %>%
filter(Datum >= as.Date(start), Datum <= as.Date(end)) %>%
mutate(Week = lubridate::week(Datum),
Sunday = Datum - lubridate::wday(Datum) + 1) %>%
group_by(Week, Sunday, Datum) %>%
count() %>%
group_by(Week, Sunday) %>%
count()
df01 = df %>%
mutate(Datum = as.Date(Datum, format = "%d.%m.%y")) %>%
filter(Datum >= as.Date(start), Datum <= as.Date(end)) %>%
mutate(Week = lubridate::week(Datum),
Sunday = Datum - lubridate::wday(Datum) + 1) %>%
group_by(!!rlang::sym(variable), Week) %>%
count() %>%
mutate(indicator = case_when(!!rlang::sym(variable) %in% c("deutsch", "israelisch",
"jüdisch", "palestinänsisch") ~ !!rlang::sym(variable),
n > thresh ~ !!rlang::sym(variable),
TRUE ~ "andere"))
df_area = df %>%
mutate(Datum = as.Date(Datum, format = "%d.%m.%y")) %>%
filter(Datum >= as.Date(start), Datum <= as.Date(end)) %>%
mutate(Week = lubridate::week(Datum),
Sunday = Datum - lubridate::wday(Datum) + 1) %>%
select(Week, Datum, Sunday, Name, !!rlang::sym(variable)) %>%
unique() %>%
group_by(Week, Sunday, !!rlang::sym(variable)) %>%
count(name = "variable_per_week") %>%
mutate(indicator = case_when(!!rlang::sym(variable) %in% c("deutsch", "israelisch",
"jüdisch", "palestinänsisch",
unique(df$Profession)) ~ !!rlang::sym(variable),
variable_per_week > thresh ~ !!rlang::sym(variable),
TRUE ~ "andere")) %>%
ungroup() %>%
group_by(Week, Sunday, indicator) %>%
mutate(variable_per_week = sum(variable_per_week)) %>%
select(Week, Sunday, variable_per_week, indicator) %>%
unique() %>%
group_by(Week) %>%
mutate(share = variable_per_week/sum(variable_per_week)) %>%
left_join(df_date) %>%
mutate(share = share*n) %>%
ungroup()
all_comb = df_area %>%
expand(Sunday, indicator) %>%
left_join(df_area) %>%
mutate(share = replace_na(share, 0))
ggplot() + theme_void() +
geom_area(data = all_comb, aes(x = Sunday + 1, y = share, fill = indicator), color = "black", alpha = 1) +
geom_line(data = df_date, aes(x = Sunday + 1, y = n)) +
#geom_point(data = df_date, fill = "grey50", color = "black", shape = 21, position = "identity",
#           aes(x = Sunday + 1, y = n, size = n)) +
add_plot_layout(fontsize = 15) +
scale_x_date(name = "Wochenbeginn (Sonntag)") +
scale_y_continuous(limits = c(0, max(df_date$n)), expand = c(0,.5)) +
scale_size_continuous(limits = c(1, max(df_date$n)), range = c(1, max(df_date$n)*2)) +
scico::scale_fill_scico_d(palette = colorscheme, direction = 1, name = variable, end = .85, begin = .3)  +
theme(axis.text.x = element_text(size = 15, angle = 90),
axis.text.y = element_text(size = 15),
axis.title.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major.y = element_line(color = "grey80")
)
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
df0 = cutoff(df, variable, thresh)
cutoff = function(df, variable, thresh = 1) {
df0 = df %>%
group_by(!!rlang::sym(variable)) %>%
count() %>%
mutate(indicator = case_when(!!rlang::sym(variable) %in% c("deutsch", "israelisch",
"jüdisch", "palästinensisch") ~ !!rlang::sym(variable),
n > thresh ~ !!rlang::sym(variable),
TRUE ~ "andere"))
return(df0)
}
df0 = cutoff(df, variable, thresh)
head(df0)
names(df)
variable = "Perspektive_Identität"
df0 = cutoff(df, variable, thresh)
head(df0)
head(df0, 15)
df = read_csv("data/data.csv")
df = read_csv("shiny/data/data.csv")
df0 = cutoff(df, variable, thresh)
head(df0, 15)
cutoff = function(df, variable, thresh = 1) {
df0 = df %>%
group_by(!!rlang::sym(variable)) %>%
unique() %>%
count() %>%
mutate(indicator = case_when(!!rlang::sym(variable) %in% c("deutsch", "israelisch",
"jüdisch", "palästinensisch") ~ !!rlang::sym(variable),
n > thresh ~ !!rlang::sym(variable),
TRUE ~ "andere"))
return(df0)
}
df0 = cutoff(df, variable, thresh)
head(df0, 15)
head(df)
cutoff = function(df, variable, thresh = 1) {
df0 = df %>%
select(!!rlang::sym(variable)) %>%
unique() %>%
group_by(!!rlang::sym(variable)) %>%
count() %>%
mutate(indicator = case_when(!!rlang::sym(variable) %in% c("deutsch", "israelisch",
"jüdisch", "palästinensisch") ~ !!rlang::sym(variable),
n > thresh ~ !!rlang::sym(variable),
TRUE ~ "andere"))
return(df0)
}
df0 = cutoff(df, variable, thresh)
head(df0, 15)
names(df)
cutoff = function(df, variable, thresh = 1) {
df0 = df %>%
select(!!rlang::sym(variable), Name, Datum) %>%
unique() %>%
group_by(!!rlang::sym(variable)) %>%
count() %>%
mutate(indicator = case_when(!!rlang::sym(variable) %in% c("deutsch", "israelisch",
"jüdisch", "palästinensisch") ~ !!rlang::sym(variable),
n > thresh ~ !!rlang::sym(variable),
TRUE ~ "andere"))
return(df0)
}
df0 = cutoff(df, variable, thresh)
head(df0)
head(df0, 15)
runApp("shiny")
cutoff = function(df, variable, thresh = 1) {
df0 = df %>%
select(!!rlang::sym(variable), Name, Datum) %>%
unique() %>%
group_by(!!rlang::sym(variable)) %>%
count() %>%
mutate(indicator = case_when(!!rlang::sym(variable) %in% c("deutsch", "israelisch",
"jüdisch", "palästinensisch") ~ !!rlang::sym(variable),
n > thresh ~ !!rlang::sym(variable),
TRUE ~ "andere"))
return(df0)
}
add_plot_layout = function(fontsize = 15, background = '#f9f6ee') {
theme_classic() %+replace%
theme(axis.title = element_text(size = fontsize),
axis.ticks = element_blank(),
legend.background = element_rect(fill=background, color = NA),
legend.box.background = element_rect(fill=background, color = NA),
panel.background = element_rect(fill = background, colour = NA),
plot.margin = margin(0, 0, 0, 0, "cm"),
plot.background = element_rect(fill = background, colour = NA),
strip.background = element_rect(fill = background, color = NA),
strip.text = element_text(size = fontsize),
text = element_text(size = fontsize))
}
plot1 = function(variable, df=df, thresh = 2) {
df0 = cutoff(df, variable, thresh)
label_andere = df0 %>%
filter(n <= thresh) %>%
mutate(label = paste(!!rlang::sym(variable), ": ", n, " Auftritte<br>")) %>%
ungroup()
label = paste(label_andere$label, collapse = " ")
df1 = full_join(df, df0) %>%
group_by(indicator) %>%
count() %>%
mutate(text = if_else(indicator == "andere", as.character(label), paste0(as.character(indicator), ": ", n, " Auftritte")))
p1 = ggplot() + theme_void() +
geom_bar(data = df1, alpha = 1, color = "black", stat = "identity", width = .5,
aes(x = indicator, y =n,  fill = indicator, text = text)) +
scico::scale_fill_scico_d(palette = colorscheme, direction = 1, end = .85, begin = .3) +
scale_y_continuous(expand = c(0,0)) +
scale_x_discrete(name = "") +
add_plot_layout(fontsize = 15) +
theme(axis.text.x = element_text(size = 15, angle = 90),
axis.text.y = element_text(size = 15),
axis.title.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major.y = element_line(color = "grey80"),
legend.position = "None"
)
return(p1)
}
plot1
df1 = full_join(df, df0) %>%
group_by(indicator) %>%
count() %>%
mutate(text = if_else(indicator == "andere", as.character(label), paste0(as.character(indicator), ": ", n, " Auftritte")))
label_andere = df0 %>%
filter(n <= thresh) %>%
mutate(label = paste(!!rlang::sym(variable), ": ", n, " Auftritte<br>")) %>%
ungroup()
label = paste(label_andere$label, collapse = " ")
df1 = full_join(df, df0) %>%
group_by(indicator) %>%
count() %>%
mutate(text = if_else(indicator == "andere", as.character(label), paste0(as.character(indicator), ": ", n, " Auftritte")))
p1 = ggplot() + theme_void() +
geom_bar(data = df1, alpha = 1, color = "black", stat = "identity", width = .5,
aes(x = indicator, y =n,  fill = indicator, text = text)) +
scico::scale_fill_scico_d(palette = colorscheme, direction = 1, end = .85, begin = .3) +
scale_y_continuous(expand = c(0,0)) +
scale_x_discrete(name = "") +
add_plot_layout(fontsize = 15) +
theme(axis.text.x = element_text(size = 15, angle = 90),
axis.text.y = element_text(size = 15),
axis.title.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major.y = element_line(color = "grey80"),
legend.position = "None"
)
p1
head(df0, 15)
runApp("shiny")
df0 = cutoff(df, variable, thresh)
head(df0, 15)
label_andere = df0 %>%
filter(n <= thresh) %>%
mutate(label = paste(!!rlang::sym(variable), ": ", n, " Auftritte<br>")) %>%
ungroup()
label = paste(label_andere$label, collapse = " ")
df1 = full_join(df, df0) %>%
group_by(indicator) %>%
count() %>%
mutate(text = if_else(indicator == "andere", as.character(label), paste0(as.character(indicator), ": ", n, " Auftritte")))
head(df1)
head(df1, 15)
df1 = full_join(df, df0)
head(df1)
label_andere
label
View(label_andere)
df0 = cutoff(df, variable, thresh)
label_andere = df0 %>%
filter(n <= thresh) %>%
mutate(label = paste(!!rlang::sym(variable), ": ", n, " Auftritte<br>")) %>%
ungroup()
label = paste(label_andere$label, collapse = " ")
df1 = full_join(df, df0) %>%
group_by(indicator) %>%
count() %>%
mutate(text = if_else(indicator == "andere", as.character(label), paste0(as.character(indicator), ": ", n, " Auftritte")))
head(df1)
head(df1, 15)
df1 = full_join(df, df0) %>%
group_by(indicator)
View(df1)
label_andere = df0 %>%
filter(n <= thresh) %>%
mutate(label = paste(!!rlang::sym(variable), ": ", n, " Auftritte<br>")) %>%
ungroup()
label_andere
label = paste(label_andere$label, collapse = " ")
label
thresh = 2
label_andere = df0 %>%
filter(n <= thresh) %>%
mutate(label = paste(!!rlang::sym(variable), ": ", n, " Auftritte<br>")) %>%
ungroup()
label = paste(label_andere$label, collapse = " ")
label_andere = df0 %>%
filter(n <= thresh) %>%
mutate(label = paste0(!!rlang::sym(variable), ": ", n, " Auftritte<br>")) %>%
ungroup()
label = paste(label_andere$label, collapse = " ")
df1 = full_join(df, df0) %>%
group_by(indicator) %>%
count() %>%
df1 = df0 %>%
mutate(text = if_else(indicator == "andere", as.character(label), paste0(as.character(indicator), ": ", n, " Auftritte")))
df1 = df0 %>%
mutate(text = if_else(indicator == "andere", as.character(label), paste0(as.character(indicator), ": ", n, " Auftritte")))
p1 = ggplot() + theme_void() +
geom_bar(data = df1, alpha = 1, color = "black", stat = "identity", width = .5,
aes(x = indicator, y =n,  fill = indicator, text = text)) +
scico::scale_fill_scico_d(palette = colorscheme, direction = 1, end = .85, begin = .3) +
scale_y_continuous(expand = c(0,0)) +
scale_x_discrete(name = "") +
add_plot_layout(fontsize = 15) +
theme(axis.text.x = element_text(size = 15, angle = 90),
axis.text.y = element_text(size = 15),
axis.title.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major.y = element_line(color = "grey80"),
legend.position = "None"
)
p1
head(df1)
head(df1, 15)
head(df0, 15)
head(df)
df0 = cutoff(df, variable, thresh)
head(df0, 15)
label_andere = df0 %>%
filter(n <= thresh) %>%
mutate(label = paste0(!!rlang::sym(variable), ": ", n, " Auftritte<br>")) %>%
ungroup()
label = paste(label_andere$label, collapse = " ")
df1 = df0 %>%
mutate(text = if_else(indicator == "andere", as.character(label), paste0(as.character(indicator), ": ", n, " Auftritte")))
p1 = ggplot() + theme_void() +
geom_bar(data = df1, alpha = 1, color = "black", stat = "identity", width = .5,
aes(x = indicator, y =n,  fill = indicator, text = text)) +
scico::scale_fill_scico_d(palette = colorscheme, direction = 1, end = .85, begin = .3) +
scale_y_continuous(expand = c(0,0)) +
scale_x_discrete(name = "") +
add_plot_layout(fontsize = 15) +
theme(axis.text.x = element_text(size = 15, angle = 90),
axis.text.y = element_text(size = 15),
axis.title.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major.y = element_line(color = "grey80"),
legend.position = "None"
)
p1
df1 = df0 %>%
group_by(indicator) %>%
count() %>%
mutate(text = if_else(indicator == "andere", as.character(label), paste0(as.character(indicator), ": ", n, " Auftritte")))
p1 = ggplot() + theme_void() +
geom_bar(data = df1, alpha = 1, color = "black", stat = "identity", width = .5,
aes(x = indicator, y =n,  fill = indicator, text = text)) +
scico::scale_fill_scico_d(palette = colorscheme, direction = 1, end = .85, begin = .3) +
scale_y_continuous(expand = c(0,0)) +
scale_x_discrete(name = "") +
add_plot_layout(fontsize = 15) +
theme(axis.text.x = element_text(size = 15, angle = 90),
axis.text.y = element_text(size = 15),
axis.title.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major.y = element_line(color = "grey80"),
legend.position = "None"
)
p1
df1 = full_join(df, df0) %>%
select(!!rlang::sym(variable), Name, Datum) %>%
unique() %>%
group_by(indicator) %>%
count() %>%
mutate(text = if_else(indicator == "andere", as.character(label), paste0(as.character(indicator), ": ", n, " Auftritte")))
df1 = full_join(df, df0) %>%
select(!!rlang::sym(variable), Name, Datum, indicator) %>%
unique() %>%
group_by(indicator) %>%
count() %>%
mutate(text = if_else(indicator == "andere", as.character(label), paste0(as.character(indicator), ": ", n, " Auftritte")))
p1 = ggplot() + theme_void() +
geom_bar(data = df1, alpha = 1, color = "black", stat = "identity", width = .5,
aes(x = indicator, y =n,  fill = indicator, text = text)) +
scico::scale_fill_scico_d(palette = colorscheme, direction = 1, end = .85, begin = .3) +
scale_y_continuous(expand = c(0,0)) +
scale_x_discrete(name = "") +
add_plot_layout(fontsize = 15) +
theme(axis.text.x = element_text(size = 15, angle = 90),
axis.text.y = element_text(size = 15),
axis.title.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major.y = element_line(color = "grey80"),
legend.position = "None"
)
p1
runApp("shiny")
runApp("shiny")
unique(df$Perspektive_Identität)
runApp("shiny")
print(start)
if (variable %in% c("Nationalität", "Perspektive_Identität")) thresh = thresh else thresh = 0
df_date = df %>%
mutate(Datum = as.Date(Datum, format = "%d.%m.%y")) %>%
filter(Datum >= as.Date(start), Datum <= as.Date(end)) %>%
mutate(Week = lubridate::week(Datum),
Sunday = Datum - lubridate::wday(Datum) + 1) %>%
group_by(Week, Sunday, Datum) %>%
count() %>%
group_by(Week, Sunday) %>%
count()
df01 = df %>%
mutate(Datum = as.Date(Datum, format = "%d.%m.%y")) %>%
filter(Datum >= as.Date(start), Datum <= as.Date(end)) %>%
mutate(Week = lubridate::week(Datum),
Sunday = Datum - lubridate::wday(Datum) + 1) %>%
group_by(!!rlang::sym(variable), Week) %>%
count() %>%
mutate(indicator = case_when(!!rlang::sym(variable) %in% c("deutsch", "israelisch",
"jüdisch", "palästinensisch") ~ !!rlang::sym(variable),
n > thresh ~ !!rlang::sym(variable),
TRUE ~ "andere"))
df_area = df %>%
mutate(Datum = as.Date(Datum, format = "%d.%m.%y")) %>%
filter(Datum >= as.Date(start), Datum <= as.Date(end)) %>%
mutate(Week = lubridate::week(Datum),
Sunday = Datum - lubridate::wday(Datum) + 1) %>%
select(Week, Datum, Sunday, Name, !!rlang::sym(variable)) %>%
unique() %>%
group_by(Week, Sunday, !!rlang::sym(variable)) %>%
count(name = "variable_per_week") %>%
mutate(indicator = case_when(!!rlang::sym(variable) %in% c("deutsch", "israelisch",
"jüdisch", "palestinänsisch",
unique(df$Profession)) ~ !!rlang::sym(variable),
variable_per_week > thresh ~ !!rlang::sym(variable),
TRUE ~ "andere")) %>%
ungroup() %>%
group_by(Week, Sunday, indicator) %>%
mutate(variable_per_week = sum(variable_per_week)) %>%
select(Week, Sunday, variable_per_week, indicator) %>%
unique() %>%
group_by(Week) %>%
mutate(share = variable_per_week/sum(variable_per_week)) %>%
left_join(df_date) %>%
mutate(share = share*n) %>%
ungroup()
all_comb = df_area %>%
expand(Sunday, indicator) %>%
left_join(df_area) %>%
mutate(share = replace_na(share, 0))
ggplot() + theme_void() +
geom_area(data = all_comb, aes(x = Sunday + 1, y = share, fill = indicator), color = "black", alpha = 1) +
geom_line(data = df_date, aes(x = Sunday + 1, y = n)) +
#geom_point(data = df_date, fill = "grey50", color = "black", shape = 21, position = "identity",
#           aes(x = Sunday + 1, y = n, size = n)) +
add_plot_layout(fontsize = 15) +
scale_x_date(name = "Wochenbeginn (Sonntag)") +
scale_y_continuous(limits = c(0, max(df_date$n)), expand = c(0,.5)) +
scale_size_continuous(limits = c(1, max(df_date$n)), range = c(1, max(df_date$n)*2)) +
scico::scale_fill_scico_d(palette = colorscheme, direction = 1, name = variable, end = .85, begin = .3)  +
theme(axis.text.x = element_text(size = 15, angle = 90),
axis.text.y = element_text(size = 15),
axis.title.y = element_blank(),
axis.line.y = element_blank(),
panel.grid.major.y = element_line(color = "grey80")
)
df_area = df %>%
mutate(Datum = as.Date(Datum, format = "%d.%m.%y")) %>%
filter(Datum >= as.Date(start), Datum <= as.Date(end)) %>%
mutate(Week = lubridate::week(Datum),
Sunday = Datum - lubridate::wday(Datum) + 1) %>%
select(Week, Datum, Sunday, Name, !!rlang::sym(variable)) %>%
unique() %>%
group_by(Week, Sunday, !!rlang::sym(variable)) %>%
count(name = "variable_per_week")
head(df_area)
df_area = df %>%
mutate(Datum = as.Date(Datum, format = "%d.%m.%y")) %>%
filter(Datum >= as.Date(start), Datum <= as.Date(end)) %>%
mutate(Week = lubridate::week(Datum),
Sunday = Datum - lubridate::wday(Datum) + 1) %>%
select(Week, Datum, Sunday, Name, !!rlang::sym(variable)) %>%
unique() %>%
group_by(Week, Sunday, !!rlang::sym(variable)) %>%
count(name = "variable_per_week") %>%
mutate(indicator = case_when(!!rlang::sym(variable) %in% c("deutsch", "israelisch",
"jüdisch", "palestinänsisch",
unique(df$Profession)) ~ !!rlang::sym(variable),
variable_per_week > thresh ~ !!rlang::sym(variable),
TRUE ~ "andere"))
head(df_area)
unique(df_area$indicator)
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
runApp("shiny")
install.packages("shinyapps")
install.packages("rsconnect")
install.packages("rsconnect")
install.packages("renv")
install.packages("rsconnect")
install.packages("rsconnect")
rsconnect::setAccountInfo(name='lucialayritz', token='B0778E111B4BC95992088692A59AC47D', secret='e/TnYQjgITx27BANSQQcB9nhmMKRb8481VjDpGbG')
rsconnect::setAccountInfo(name='lucialayritz', token='B0778E111B4BC95992088692A59AC47D', secret='e/TnYQjgITx27BANSQQcB9nhmMKRb8481VjDpGbG')
runApp("shiny")
runApp("shiny")
runApp("shiny")
